#note : this is the most up to date action
name: validate PR raised from task/** branched to develop branch
on:
  pull_request:
    branches: [ develop ]

jobs:
  lint-static_checks-test-build:

    if: startsWith(github.head_ref, 'task/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: check if mandatory files are changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            md:
              - 'CHANGELOG.md'

      - name: FAIL if mandatory files are not changed
        if: ${{ steps.filter.outputs.md == 'false' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Mandatory markdown files were not changed')


      # AS per discussion here : https://github.com/GsActions/commit-message-checker/discussions/61, this feature might not be supported by this plugin. so we will have to github setup secrets for this to work. we will also need to check on the info we get in github context
      - name: validate commit format -- Check if HEAD commit message contains [xyz] or FAIL
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '\[[^]]+\]'
          #pattern: '^[^#].{74}'     error: 'The maximum line length of 74 characters is exceeded.'
          #pattern: '^.+(Resolves|Fixes): \#[0-9]+$' #  Check for Resolves / Fixes

          error: 'Your  commit must contain `[..]` like "[BUGFIX] or [SDK-974]".'
          #checkAllCommitMessages: 'false' # optional: this checks all commits associated with a pull request
          #accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true
          #flags: 'gm'

          excludeDescription: 'true'                # optional: this excludes the description body of a pull request
          excludeTitle: 'true'                      # optional: this excludes the title of a pull request

      - name: Checkout Code from Source Branch.
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Check lint
        run: ./gradlew :clevertap-core:lint :clevertap-geofence:lint  :clevertap-hms:lint  :clevertap-pushTemplates:lint :clevertap-xps:lint

      - name: Upload Lint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lint_results
          path:  |
            clevertap-core/build/reports/lint-results.html
            clevertap-hms/build/reports/lint-results.html
            clevertap-xps/build/reports/lint-results.html
            clevertap-geofence/build/reports/lint-results.html
            clevertap-pushTemplates/build/reports/lint-results.html

      - name: CodeAnalysis via  detekt
        run: ./gradlew :clevertap-core:detekt :clevertap-geofence:detekt  :clevertap-hms:detekt  :clevertap-pushTemplates:detekt :clevertap-xps:detekt

      - name: Upload detekt results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: detekt_results
          path:  |
            clevertap-core/build/reports/detekt
            clevertap-hms/build/reports/detekt
            clevertap-xps/build/reports/detekt
            clevertap-geofence/build/reports/detekt
            clevertap-pushTemplates/build/reports/detekt

      - name: CodeAnalysis via  checkstyle
        run: ./gradlew :clevertap-core:checkstyle :clevertap-geofence:checkstyle  :clevertap-hms:checkstyle  :clevertap-pushTemplates:checkstyle :clevertap-xps:checkstyle

      - name: Upload checkstyle results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle_results
          path: |
            clevertap-core/build/reports/checkstyle
            clevertap-hms/build/reports/checkstyle
            clevertap-xps/build/reports/checkstyle
            clevertap-geofence/build/reports/checkstyle
            clevertap-pushTemplates/build/reports/checkstyle

      - name: Run Unit Tests And Code Coverage (DEBUG)
        run: ./gradlew :clevertap-core:jacocoTestReportDebug :clevertap-geofence:jacocoTestReportDebug  :clevertap-hms:jacocoTestReportDebug  :clevertap-pushTemplates:jacocoTestReportDebug :clevertap-xps:jacocoTestReportDebug

      - name: Run Unit Tests And Code Coverage (RELEASE)
        if: always()
        run: ./gradlew :clevertap-core:jacocoTestReportRelease :clevertap-geofence:jacocoTestReportRelease  :clevertap-hms:jacocoTestReportRelease  :clevertap-pushTemplates:jacocoTestReportRelease :clevertap-xps:jacocoTestReportRelease

      - name: Upload Unit tests
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-results.zip
          path: |
            clevertap-core/build/reports/tests
            clevertap-core/build/reports/jacoco

            clevertap-hms/build/reports/tests
            clevertap-hms/build/reports/jacoco

            clevertap-xps/build/reports/tests
            clevertap-xps/build/reports/jacoco

            clevertap-geofence/build/reports/tests
            clevertap-geofence/build/reports/jacoco

            clevertap-pushTemplates/build/reports/tests
            clevertap-pushTemplates/build/reports/jacoco


      - name: Generate AAR files
        run: ./gradlew :clevertap-core:assembleDebug :clevertap-geofence:assembleDebug  :clevertap-hms:assembleDebug  :clevertap-pushTemplates:assembleDebug :clevertap-xps:assembleDebug

      - name: Upload AAR and apk files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: aars_and_apks.zip
          path: |
            clevertap-core/build/outputs/aar
            clevertap-hms/build/outputs/aar
            clevertap-xps/build/outputs/aar
            clevertap-geofence/build/outputs/aar
            clevertap-pushTemplates/build/outputs/aar

#      - name: Post to a Slack channel
#        id: slack
#        uses: slackapi/slack-github-action@v1.18.0
#        with:
#          # Slack channel id, channel name, or user id to post message. See also: https://api.slack.com/methods/chat.postMessage#channels
#          channel-id: 'CHANNEL_ID'
#          # For posting a simple plain text message
#          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}